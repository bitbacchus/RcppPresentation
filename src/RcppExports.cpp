// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// add
int add(int x, int y, int z);
RcppExport SEXP _RcppPresentation_add(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(add(x, y, z));
    return rcpp_result_gen;
END_RCPP
}
// mat_mult_naive_rcpp
Rcpp::NumericMatrix mat_mult_naive_rcpp(Rcpp::NumericMatrix a, Rcpp::NumericMatrix b);
RcppExport SEXP _RcppPresentation_mat_mult_naive_rcpp(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mat_mult_naive_rcpp(a, b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppPresentation_add", (DL_FUNC) &_RcppPresentation_add, 3},
    {"_RcppPresentation_mat_mult_naive_rcpp", (DL_FUNC) &_RcppPresentation_mat_mult_naive_rcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppPresentation(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
